name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-24.04
    permissions:
      contents: write

    steps:
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y just pkg-config go-md2man libvirt-daemon libvirt-clients qemu-kvm qemu-system qemu-utils virtiofsd

      - name: Install podman for heredoc support
        run: |
          set -eux
          echo 'deb [trusted=yes] https://ftp.debian.org/debian/ testing main' | sudo tee /etc/apt/sources.list.d/testing.list
          sudo apt update
          sudo apt install -y crun/testing podman/testing just

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          ls -l /dev/kvm

      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        
      - uses: taiki-e/install-action@nextest

      - name: Cache build artifacts
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: just build
        
      - name: Run unit tests
        run: just unit
        
      - name: Run integration tests
        run: just test-integration

      - name: Create archive
        run: just archive
        
      - name: Upload artifacts
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: bcvk-binary
          path: |
            bcvk-*.tar.gz
            bcvk-*.tar.gz.sha256
          retention-days: 7

      - name: Create or update latest release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Delete existing latest release if it exists
          gh release delete latest --cleanup-tag -y || true
          
          # Create new latest release
          gh release create latest \
            --title "Latest development build" \
            --notes "Automatically generated binaries from the latest commit on main branch.
          
          **⚠️ These are development builds and may be unstable.**
          
          Commit: ${{ github.sha }}
          Date: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
          
          ## Available binaries:
          - \`bcvk-x86_64-unknown-linux-gnu.tar.gz\` - Linux x86_64 (glibc 2.27+)" \
            --prerelease \
            --target main
          
          # Upload all artifacts
          gh release upload latest bcvk-*.tar.gz bcvk-*.tar.gz.sha256 --clobber
